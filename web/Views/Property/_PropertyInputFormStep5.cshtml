@model BricksAndHearts.ViewModels.PropertyInput.PropertyInputModelTenantPreferences

<h1 class="font-h1">What kind of tenant would you prefer?</h1>

<div asp-validation-summary="All" class="text-danger"></div>
<form method="post">

    <div class="my-4 py-3">
        <label class="form-label mb-3">Select all that apply:</label>

        <div class="row g-3">
            <div class="col-auto d-grid">
                @Html.CheckBox("HousingRequirementModel.AcceptsSingleTenant", Model.HousingRequirementModel.AcceptsSingleTenant ?? false, new { @class = "btn-check" })
                <label asp-for="HousingRequirementModel.AcceptsSingleTenant" class="btn btn-outline-blue shadow-none pill-check">Single tenant</label>
            </div>
            <div class="col-auto d-grid">
                @Html.CheckBox("HousingRequirementModel.AcceptsCouple", Model.HousingRequirementModel.AcceptsCouple ?? false, new { @class = "btn-check" })
                <label asp-for="HousingRequirementModel.AcceptsCouple" class="btn btn-outline-blue shadow-none pill-check">Couple</label>
            </div>
            <div class="col-auto d-grid">
                @Html.CheckBox("HousingRequirementModel.AcceptsFamily", Model.HousingRequirementModel.AcceptsFamily ?? false, new { @class = "btn-check" })
                <label asp-for="HousingRequirementModel.AcceptsFamily" class="btn btn-outline-blue shadow-none pill-check">Family (3+)</label>
            </div>
        </div>
    </div>

    <div class="my-4 py-3">
        <label class="form-label">Will you accept tenants with pets?</label>

        <div class="form-check">
            <input type="radio" asp-for="HousingRequirementModel.AcceptsPets" value="true" id="PetsTrue" class="form-check-input" required>
            <label for="PetsTrue" class="form-check-label">Yes</label>
        </div>
        <div class="form-check">
            <input type="radio" asp-for="HousingRequirementModel.AcceptsPets" value="false" id="PetsFalse" class="form-check-input" required>
            <label for="PetsFalse" class="form-check-label">No</label>
        </div>
    </div>

    <div class="my-4 py-3">
        <label class="form-label">Will you accept tenants:</label>
        <div class="form-check">
            @Html.CheckBox("HousingRequirementModel.AcceptsCredit", Model.HousingRequirementModel.AcceptsCredit ?? false, new { @class = "form-check-input" })
            <label asp-for="HousingRequirementModel.AcceptsCredit" class="form-check-label">
                on Universal Credit
            </label>
        </div>
        <div class="form-check">
            @Html.CheckBox("HousingRequirementModel.AcceptsBenefits", Model.HousingRequirementModel.AcceptsBenefits ?? false, new { @class = "form-check-input" })
            <label asp-for="HousingRequirementModel.AcceptsBenefits" class="form-check-label">
                on Universal Credit or housing benefits?
            </label>
        </div>
        <div class="form-check">
            @Html.CheckBox("HousingRequirementModel.AcceptsNotEET", Model.HousingRequirementModel.AcceptsNotEET ?? false, new { @class = "form-check-input" })
            <label asp-for="HousingRequirementModel.AcceptsNotEET" class="form-check-label">
                not in EET (Employment, Education, or Training)?
            </label>
        </div>
        <div class="form-check">
            @Html.CheckBox("HousingRequirementModel.AcceptsWithoutGuarantor", Model.HousingRequirementModel.AcceptsWithoutGuarantor ?? false, new { @class = "form-check-input" })
            <label asp-for="HousingRequirementModel.AcceptsWithoutGuarantor" class="form-check-label">
                without a rent guarantor?
            </label>
        </div>
        <div class="form-check">
            @Html.CheckBox("HousingRequirementModel.AcceptsOver35", Model.HousingRequirementModel.AcceptsOver35 ?? false, new { @class = "form-check-input" })
            <label asp-for="HousingRequirementModel.AcceptsOver35" class="form-check-label">
                that are over 35?
            </label>
        </div>
    </div>
    @{ await Html.RenderPartialAsync("_PropertyFormButtons", Model); }
</form>