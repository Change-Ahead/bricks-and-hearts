@model PropertyDetailsViewModel

@{
    ViewData["Title"] = "View Property";
}

@functions
{
    string GetPreferenceFont(bool? preference)
    {
        return preference ?? false ? "" : "font-orange";
    }

    string GetPreferenceIcon(bool? preference)
    {
        return preference ?? false ? "bi-check-lg" : "bi-x-lg";
    }
}

<div class="mt-5 row">
    <div class="col-auto mb-2">
        <h1 class="font-h1 d-inline">@Model.Property.Address.ToShortAddressString()</h1>
    </div>
    <div class="col-auto mb-2 d-flex align-items-center">
        @switch (Model.Property.Availability)
        {
            case AvailabilityState.Occupied:
                <span class="status-pill-occupied rounded-pill px-3 py-1">
                    <i class="bi bi-people me-1"></i>
                    Occupied
                </span>
                break;
            case AvailabilityState.Unavailable:
                <span class="status-pill-unavailable rounded-pill px-3 py-1">
                    <i class="bi bi-x-lg me-1"></i>
                    Unavailable
                </span>
                break;
            case AvailabilityState.Draft:
                <span class="status-pill-draft rounded-pill px-3 py-1">
                    <i class="bi bi-clock me-1"></i>
                    Draft
                </span>
                break;
            default:
                <span class="status-pill-live rounded-pill px-3 py-1">
                    <i class="bi bi-eye me-1"></i>
                    Live
                </span>
                break;
        }

    </div>
</div>

<div class="row property-img-row">
    @if (Model.Images.Count > 0)
    {
        <div class="col-sm my-3">
            <a href="#" class="property-img-lg placeholder-glow" data-bs-toggle="modal" data-bs-target="#imageModal">
                <div class="placeholder w-100 h-100" id="image0Placeholder"></div>
                <img src="@Model.Images[0].FileUrl" alt="@Model.Images[0].FileName" id="image0" style="display: none" onload="hidePlaceholder('#image0')">
            </a>
        </div>
        @if (Model.Images.Count > 1)
        {
            <div class="col-sm-4 my-3 property-img-sm-col">
                <a href="#" class="property-img-sm placeholder-glow" data-bs-toggle="modal" data-bs-target="#imageModal">
                    <div class="placeholder w-100 h-100" id="image1Placeholder"></div>
                    <img src="@Model.Images[1].FileUrl" alt="@Model.Images[1].FileName" id="image1" style="display: none" onload="hidePlaceholder('#image1')">
                </a>
                @if (Model.Images.Count > 2)
                {
                    <a href="#" class="property-img-sm property-img-overlay placeholder-glow" data-bs-toggle="modal" data-bs-target="#imageModal">
                        <div class="placeholder w-100 h-100" id="image2Placeholder"></div>
                        <img src="@Model.Images[2].FileUrl" alt="@Model.Images[2].FileName" id="image2" style="display: none" onload="hidePlaceholder('#image2')">
                        <span class="property-img-text">See more</span>
                    </a>
                }
            </div>
        }
    }
    else
    {
        <div class="card mt-4">
            <div class="card-body">
                <form asp-action="AddPropertyImages" asp-controller="Property" method="post" enctype="multipart/form-data">
                    <div class="mb-3">
                        <input type="hidden" id="propertyId" name="propertyId" value="@Model.Property.PropertyId">
                        <label for="imageUpload" class="form-label">Upload some images for this property</label>
                        <input name="images" id="imageUpload" type="file" multiple accept="image/*" class="form-control h-auto">
                    </div>
                    <button type="submit" class="btn btn-primary">Upload images</button>
                </form>
            </div>
        </div>
    }
</div>

<div class="row mt-4 px-2">
    <div class="d-flex">
        <h3 class="font-h3 d-inline-block">Description</h3>
        <a class="bi bi-pencil ms-auto" asp-action="EditProperty" asp-controller="Property" asp-route-propertyId="@Model.Property.PropertyId"></a>
    </div>
    <div class="card custom-card mt-2">
        <div class="card-body">
            <p class="collapse property-description font-smallBody" id="descriptionCollapse">@(Model.Property.Description ?? "Missing description")</p>
            <a class="collapsed font-smallBody" role="button" data-bs-toggle="collapse" href="#descriptionCollapse"></a>
        </div>
    </div>
</div>


<div class="row mt-4">
    <div class="col-md pb-2">
        <div class="d-flex">
            <h3 class="font-h3 d-inline-block">Details</h3>
            <a class="bi bi-pencil ms-auto" asp-action="EditProperty" asp-controller="Property" asp-route-propertyId="@Model.Property.PropertyId"></a>
        </div>
        <div class="card custom-card mt-2">
            <div class="card-body row text-center">
                <div class="col border-end">
                    <h4 class="font-smallBody">Type</h4>
                    <p class="font-h2 mb-0">@(Model.Property.PropertyType ?? "N/A")</p>
                </div>
                <div class="col border-end">
                    <h4 class="font-smallBody">Bedrooms</h4>
                    <p class="font-h2 mb-0">@(Model.Property.NumOfBedrooms != null ? Model.Property.NumOfBedrooms : "N/A")</p>
                </div>
                <div class="col">
                    <h4 class="font-smallBody">Rent</h4>
                    <p class="font-h2 mb-0">@(Model.Property.Rent != null ? "£" + Model.Property.Rent + " pcm" : "N/A")</p>
                </div>
            </div>
        </div>

        <div class="d-flex mt-3">
            <h3 class="font-h3 d-inline-block">Availability</h3>
            <a class="bi bi-pencil ms-auto" asp-action="EditProperty" asp-controller="Property" asp-route-propertyId="@Model.Property.PropertyId"></a>
        </div>
        <div class="card custom-card mt-2">
            <div class="card-body text-center">
                <div class="row">
                    <h4 class="font-smallBody">Status</h4>
                    <p class="font-h2 mb-0">
                        @switch (Model.Property.Availability)
                        {
                            case AvailabilityState.AvailableSoon:
                                @("Available from " + Model.Property.AvailableFrom!.Value.ToLongDateString())
                                break;
                            case AvailabilityState.Available:
                                @("Available now")
                                break;
                            default:
                                @Model.Property.Availability
                                break;
                        }
                    </p>
                </div>
                @if (Model.Property.TotalUnits > 1)
                {
                    <div class="row mt-3">
                        <div class="col border-end">
                            <h4 class="font-smallBody">Total units</h4>
                            <p class="font-h2 mb-0">@(Model.Property.TotalUnits != null ? Model.Property.TotalUnits : "N/A")</p>
                        </div>
                        <div class="col border-end">
                            <h4 class="font-smallBody">Occupied units</h4>
                            <p class="font-h2 mb-0">@(Model.Property.OccupiedUnits != null ? Model.Property.OccupiedUnits : "N/A")</p>
                        </div>
                        <div class="col">
                            <h4 class="font-smallBody">Available units</h4>
                            <p class="font-h2 mb-0">@(Model.Property.AvailableUnits != null ? Model.Property.AvailableUnits : "N/A")</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-md d-flex flex-column pb-2">
        <div class="d-flex">
            <h3 class="font-h3 d-inline-block">Tenant preferences</h3>
            <a class="bi bi-pencil ms-auto" asp-action="EditProperty" asp-controller="Property" asp-route-propertyId="@Model.Property.PropertyId"></a>
        </div>
        <div class="card custom-card flex-grow-1 mt-2">
            <div class="card-body">
                <div class="@GetPreferenceFont(Model.Property.LandlordRequirements.AcceptsSingleTenant)">
                    <i class="bi me-1 @GetPreferenceIcon(Model.Property.LandlordRequirements.AcceptsSingleTenant)"></i>
                    Single tenants
                </div>
                <div class="@GetPreferenceFont(Model.Property.LandlordRequirements.AcceptsCouple)">
                    <i class="bi me-1 @GetPreferenceIcon(Model.Property.LandlordRequirements.AcceptsCouple)"></i>
                    Couples
                </div>
                <div class="@GetPreferenceFont(Model.Property.LandlordRequirements.AcceptsFamily)">
                    <i class="bi me-1 @GetPreferenceIcon(Model.Property.LandlordRequirements.AcceptsFamily)"></i>
                    Families
                </div>
                <div class="@GetPreferenceFont(Model.Property.LandlordRequirements.AcceptsBenefits)">
                    <i class="bi me-1 @GetPreferenceIcon(Model.Property.LandlordRequirements.AcceptsBenefits)"></i>
                    On Universal Credit or housing benefits
                </div>
                <div class="@GetPreferenceFont(Model.Property.LandlordRequirements.AcceptsNotEET)">
                    <i class="bi me-1 @GetPreferenceIcon(Model.Property.LandlordRequirements.AcceptsNotEET)"></i>
                    Not in EET (Employment, Education, or Training)
                </div>
                <div class="@GetPreferenceFont(Model.Property.LandlordRequirements.AcceptsWithoutGuarantor)">
                    <i class="bi me-1 @GetPreferenceIcon(Model.Property.LandlordRequirements.AcceptsWithoutGuarantor)"></i>
                    Without rent guarantor
                </div>
            </div>
        </div>
    </div>
</div>


@if (User.IsInRole("Admin"))
{
    <div class="row mt-4">
        <div class="col-auto mb-2">
            @* TODO: Link this to tenant matching page *@
            <a asp-action="" asp-controller="" class="btn btn-large btn-outline-primary d-table-cell">View matches</a>
        </div>
        <div class="col-auto mb-2">
            <a asp-action="GetPublicViewLink" asp-controller="Property" asp-route-propertyId="@Model.Property.PropertyId" class="btn btn-large btn-outline-primary d-table-cell">Get shareable link</a>
        </div>
    </div>
}

<div class="row mt-4">
    <div class="col-auto mb-2">
        <a asp-action="EditProperty" asp-controller="Property" class="btn btn-large btn-outline-primary d-table-cell">Edit property</a>
    </div>
    <div class="col-auto">
        <button type="button" class="btn btn-large btn-danger" data-bs-toggle="modal" data-bs-target="#deletePropertyModal">
            <i class="bi bi-trash"></i>
            Delete property
        </button>
    </div>
</div>


<!-- Image modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <div id="imageCarousel" class="carousel slide" data-bs-ride="carousel" data-bs-interval="false">
                    <div class="carousel-indicators">
                        @for (var i = 0; i < Model.Images.Count; i++)
                        {
                            <button type="button" data-bs-target="#imageCarousel" data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")" aria-label="Slide @i"></button>
                        }
                    </div>
                    <div class="carousel-inner">
                        @for (var i = 0; i < Model.Images.Count; i++)
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <img src="@Model.Images[i].FileUrl" id="carouselImage@(i)" class="d-block w-100" alt="@Model.Images[i].FileName">
                            </div>
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#imageCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#imageCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
            <div class="modal-footer">
                <form asp-action="AddPropertyImages" asp-controller="Property" method="post" enctype="multipart/form-data" class="me-auto">
                    <input type="hidden" id="propertyId" name="propertyId" value="@Model.Property.PropertyId">
                    <input name="images" type="file" multiple accept="image/*" class="form-control d-inline h-auto mw-60">
                    <button type="submit" class="btn btn-primary">Upload images</button>
                </form>
                <button type="button" class="btn btn-danger" data-bs-target="#deleteImageModal" data-bs-toggle="modal">
                    <i class="bi bi-trash"></i>
                    Delete image
                </button>
                <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete image modal -->
<div class="modal fade" id="deleteImageModal" tabindex="-1" aria-labelledby="deleteImageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteImageModalLabel">Delete image</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this image?
            </div>
            <div class="modal-footer">
                <form method="post" asp-controller="Property" asp-action="DeletePropertyImage">
                    <input type="hidden" id="deletePropertyId" name="propertyId" value="@Model.Property.PropertyId">
                    <input type="hidden" id="deleteFileName" name="fileName" value="@(Model.Images.Count > 0 ? Model.Images[0].FileName : "")">
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash"></i>
                        Delete
                    </button>
                </form>
                <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete property modal -->
<div class="modal fade" id="deletePropertyModal" tabindex="-1" aria-labelledby="deletePropertyModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deletePropertyModalLabel">Delete property</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this property? This cannot be undone.
            </div>
            <div class="modal-footer">
                <form method="post" asp-controller="Property" asp-action="DeleteProperty">
                    <input type="hidden" name="PropertyId" value="@Model.Property.PropertyId"/>
                    <input type="submit" value="Delete" class="btn btn-danger"/>
                </form>
                <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script src="~/js/propertyDetails.js" asp-append-version="true"></script>