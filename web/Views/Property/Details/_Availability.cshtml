@model PropertyDetailsViewModel

<div class="d-flex mt-3">
    <h3 class="font-h3 d-inline-block">Availability</h3>
    <a class="bi bi-pencil ms-auto" asp-action="PropertyInputStepSix" asp-controller="Property" asp-route-operationType="edit" asp-route-propertyId="@Model.Property!.PropertyId"></a>
</div>

<div class="card custom-card mt-2">
    <div class="card-body text-center">
        <div class="row">
            <h4 class="font-smallBody">Status</h4>
            <p class="font-h2 mb-0">
                @switch (Model.Property!.Availability)
                {
                    case AvailabilityState.AvailableSoon:
                        @("Available from " + Model.Property.AvailableFrom!.Value.ToLongDateString())
                        break;
                    case AvailabilityState.Available:
                        @("Available now")
                        break;
                    default:
                        @Model.Property.Availability
                        break;
                }
            </p>
        </div>
        @if (Model.Property.TotalUnits > 1)
        {
            <div class="row mt-3">
                <div class="col border-end">
                    <h4 class="font-smallBody">Total units</h4>
                    <p class="font-h2 mb-0">@(Model.Property.TotalUnits != null ? Model.Property.TotalUnits : "N/A")</p>
                </div>
                <div class="col border-end">
                    <h4 class="font-smallBody">Occupied units</h4>
                    <p class="font-h2 mb-0">@(Model.Property.OccupiedUnits != null ? Model.Property.OccupiedUnits : "N/A")</p>
                </div>
                <div class="col">
                    <h4 class="font-smallBody">Available units</h4>
                    <p class="font-h2 mb-0">@(Model.Property.AvailableUnits != null ? Model.Property.AvailableUnits : "N/A")</p>
                </div>
            </div>
        }
    </div>
</div>