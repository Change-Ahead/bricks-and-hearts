@model BricksAndHearts.ViewModels.PropertyInput.PropertyInputModelBase

@{
    ViewData["Title"] = "Add Property";

    string GetStepClass(int step)
    {
        if (step == Model.Step)
        {
            return "active";
        }
        return step < Model.Step ? "finish" : "";
    }
}

<!-- Circles which indicate the steps of the form: -->
<div class="d-flex property-steps my-5">
    <span class="step @GetStepClass(1)">1</span>
    <span class="stepline"></span>
    <span class="step @GetStepClass(2)">2</span>
    <span class="stepline"></span>
    <span class="step @GetStepClass(3)">3</span>
    <span class="stepline"></span>
    <span class="step @GetStepClass(4)">4</span>
    <span class="stepline"></span>
    <span class="step @GetStepClass(5)">5</span>
    <span class="stepline"></span>
    <span class="step @GetStepClass(6)">6</span>
</div>


@if (Model.Step > 1)
{
    <div class="mb-4">
        <a asp-controller="Property" asp-action="PropertyInputBack" asp-route-step="@(Model.Step - 1)" asp-route-propertyId="@Model.PropertyId" asp-route-landlordId="@Model.LandlordId" asp-route-operationType="@(Model.IsEdit ? "edit" : "add")" class="link-secondary">Back</a>
    </div>
}

<partial name=@("_PropertyInputFormStep" + Model.Step) model="Model"/>