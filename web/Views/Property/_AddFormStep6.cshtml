@using BricksAndHearts.Database
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model PropertyViewModel

<h2>Rent, deposits, availability and duration</h2>

<div asp-validation-summary="All" class="text-danger"></div>
<div class="my-3">
    <label asp-for="Rent" class="form-label">Rent</label>
    <input asp-for="Rent" class="form-control" required/>
    <span asp-validation-for="Rent" class="text-danger"></span>
</div>

<div class="my-3">
    <label asp-for="Availability" class="form-label">Availability</label>
    <select asp-for="Availability" class="form-select" required
            id="Select" onclick="checkIfSelectedValueIsTarget('Available Soon')">
        <option selected>@PropertyDbModel.Avail_Draft</option>
        <option>@PropertyDbModel.Avail_Available</option>
        <option>@PropertyDbModel.Avail_AvailableSoon</option>
        <option>@PropertyDbModel.Avail_Occupied</option>
        <option>@PropertyDbModel.Avail_Unavailable</option>
    </select>
    <span asp-validation-for="Availability" class="text-danger"></span>
</div>

<div id="ifTrue" class="form-group my-3" style="@(Model.Availability == "Available Soon" ? "" : "display: none;")">
    <label asp-for="AvailableFrom" class="form-label">Available From</label>
    <input asp-for="AvailableFrom" class="form-control empty"/>
    <span asp-validation-for="AvailableFrom" class="text-danger"></span>
    @*TODO require AvailableFrom date to be in future*@
</div>
<div id="ifFalse" style="@(Model.Availability!="AvailableSoon" ? "" : "display: none;")">
</div>