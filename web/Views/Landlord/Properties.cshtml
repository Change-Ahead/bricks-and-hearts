@model PropertiesDashboardViewModel

@{
    ViewData["Title"] = "My Properties";
}

@if (Model.Owner == null)
{
    <h2>Landlord's properties</h2>
}
else
{
    <h2>
        @Model.Owner.FirstName's properties
    </h2>
}

<table class="table table-hover">
    <thead>
    <tr>
        <th scope="col">#</th>
        <th scope="col">Address</th>
        <th scope="col">Type</th>
        <th scope="col">Bedrooms</th>
        <th scope="col">Created</th>
        <th scope="col">Rent (pcm)</th>
        <th scope="col">Availability</th>
        <th scope="col">Description</th>
        <th scope="col">Total units</th>
        <th scope="col">Occupied units</th>
        <th scope="col">Available units</th>
        <th scope="col"></th>
    </tr>
    </thead>
    <tbody>
    @{
        var i = 1;
    }
    @foreach (var prop in Model.Properties)
    {
        <tr class="clickable"
            onclick="location.href = '@Url.Action("ViewProperty", "Property", new { propertyId = prop!.PropertyId })'">
            <th scope="row">@i</th>
            <td>
                @prop.Address.AddressLine1,
                @prop.Address.AddressLine2@(prop.Address.AddressLine2 != null ? "," : "")
                @prop.Address.AddressLine3@(prop.Address.AddressLine3 != null ? "," : "")
                @prop.Address.TownOrCity,
                @prop.Address.County,
                @prop.Address.Postcode
            </td>
            <td>@prop.PropertyType</td>
            <td>@prop.NumOfBedrooms</td>
            <td>@prop.CreationTime</td>
            <td>@prop.Rent</td>
            <td>@prop.Availability</td>
            <td>@prop.Description</td>
            <td>@prop.TotalUnits</td>
            <td>@prop.OccupiedUnits</td>
            <td>@prop.AvailableUnits</td>
            <td>
                <a class="btn btn-primary position-relative" href="@Url.Action("ViewProperty", "Property", new { propertyId = prop.PropertyId })">
                    View
                    @if (prop.IsIncomplete)
                    {
                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-warning">
                            <i class="bi bi-circle-half"></i> Incomplete
                            <span class="visually-hidden">Property is incomplete</span>
                        </span>
                    }
                </a>
            </td>
        </tr>
        i++;
    }
    </tbody>
</table>
<a class="btn btn-primary" href="@Url.Action("AddNewProperty_Begin", "Property", new { Model.Owner.LandlordId })">Add new property</a> @*Add landlord ID*@
@*@Html.ActionLink("Add new property", "AddNewProperty_Begin", "Property", null, new { @class = "btn btn-primary" })*@