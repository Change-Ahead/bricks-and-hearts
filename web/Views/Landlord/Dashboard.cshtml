@using BricksAndHearts.Auth
@model LandlordDashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<div>
    <div class="row">
        <div class="col">
            <div class="row">
                <div class="col-sm-auto profile-photo-lg">
                    <img src="@(((BricksAndHeartsUser)User.Identity!).GoogleProfileImageUrl ?? Url.Content("~/images/profileDefault.png"))" alt="profile picture">
                </div>
                <div class="col">
                    <div class="row">
                        <h6 class="font-body">Hello</h6>
                        <h2 class="font-blue font-h1">@Model.CurrentLandlord.FirstName</h2>
                        @if (Model.CurrentLandlord.NumOfProperties > 0)
                        {
                            <h6 class="font-body">View your properties</h6>
                            <div>
                                <a class="btn btn-primary mt-3" href='@Url.Action("PropertyInputStepOne", "Property", new { landlordId = Model.LandlordId, propertyId = 0, operationType = "add" })'>Add Properties</a>
                                <a class="btn btn-primary btn-lg mt-3 align-middle" href='@Url.Action("ViewProperties", "Landlord", new { id = Model.CurrentLandlord.LandlordId })'>View Properties</a>
                            </div>
                        }
                        else
                        {
                            <h6 class="font-body">Start adding your properties to the portal, to get matches</h6>
                            <div>
                                <a class="btn btn-primary btn-lg mt-3 align-middle" href='@Url.Action("AddNewProperty_Begin", "Property", new { landlordId = Model.CurrentLandlord.LandlordId})'>Add Properties</a>
                            </div>
                        }
                        @if (!Model.CurrentLandlord.CharterApproved)
                        {
                            <p class="font-subtitle font-orange mt-1">
                                * Your properties won't go live until the ChangeAhead charter signup has been approved by the ChangeAhead admins. You can still add and update draft properties before then.
                            </p>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col">
            <h6 class="font-h3">My Stats</h6>
            @{await Html.RenderPartialAsync("_DashboardStatsBoxPartial", new StatBoxModel
                {
                    IconName = Model.CurrentLandlord.CharterApproved ? "bi-check" : "bi-x",
                    Stat = Model.CurrentLandlord.CharterApproved ? "Approved" : "Not Approved",
                    StatDescription = "Charter Approval State"
                }); }
            @{ await Html.RenderPartialAsync("_DashboardStatsBoxPartial", new StatBoxModel
                {
                   IconName = "bi-house",
                   Stat = Model.PropertyTypeCount!.RegisteredProperties.ToString(),
                   StatDescription = "Total Properties"
                }); }
            @{ await Html.RenderPartialAsync("_DashboardStatsBoxPartial", new StatBoxModel
               {
                   IconName = "bi-house-door",
                   Stat = Model.PropertyTypeCount.AvailableProperties.ToString(),
                   StatDescription = "Available Properties"
               }); }
            @{ await Html.RenderPartialAsync("_DashboardStatsBoxPartial", new StatBoxModel
               {
                   IconName = "bi-house-heart",
                   Stat = Model.PropertyTypeCount.LiveProperties.ToString(),
                   StatDescription = "Live Properties"
               }); }
        </div>
        <div class="col">
            <div class="d-flex">
                <h6 class="flex-row flex-grow-1 font-h3">My Properties</h6>
                <a class="flex-row-reverse font-body font-blue" href='@Url.Action("ViewProperties", "Landlord", new { id = Model.CurrentLandlord.LandlordId })'>View All</a>
            </div>
            @foreach (var property in Model.Properties!)
            {
                <row>
                    @{ await Html.RenderPartialAsync("_DashboardPropertyDisplayPartial", property); }
                </row>
            }
        </div>
    </div>
</div>