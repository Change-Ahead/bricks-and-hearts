@model PropertiesDashboardViewModel

@{
    ViewData["Title"] = "All Properties";
}

<h2>All properties</h2>

<div>
    <div>
        <div asp-validation-summary="All" class="text-danger"></div>
            @{
                var totalRow = 0;
                var propPerTab = 2;
            }
            @for (int tab = 0; tab <= Model.Properties.Count / propPerTab; tab++)
                {
                    <div class="registerTab">
                        <table class="table">
                            <thead>
                            <tr>
                                <th scope="col">
                                    @using (Html.BeginForm("SortProperties", "Admin", new { by = "Availability" }, FormMethod.Post))
                                    {
                                        <button type="submit" class="btn btn-outline-primary btn-sm">Sort by Availability</button>
                                    }
                                </th>
                                <th scope="col">Address</th>
                                <th scope="col">Type</th>
                                <th scope="col"># of Bedrooms</th>
                                <th scope="col">Created</th>
                                <th scope="col">Rent (pcm)
                                    <a href=@Url.Action("SortProperties", "Admin", new { by = "Rent", descending = true })>
                                        <i class="bi bi-chevron-down"></i>
                                    </a>
                                    <a href=@Url.Action("SortProperties", "Admin", new { by = "Rent"})>
                                        <i class="bi bi-chevron-up"></i>
                                    </a>
                                </th>
                                <th scope="col">Description</th>
                                <th scope="col">Availability</th>
                            </tr>
                            </thead>
                            <tbody>
                            @for (int row = 0; row < propPerTab; row++)
                            {
                                <tr>
                                    <th scope="row">@(totalRow+1)</th>
                                    <td>@Model.Properties[totalRow].Address!.AddressLine1, @Model.Properties[totalRow].Address.AddressLine2, @Model.Properties[totalRow].Address.AddressLine3, @Model.Properties[totalRow].Address.TownOrCity</td>
                                    <td>@Model.Properties[totalRow].PropertyType</td>
                                    <td>@Model.Properties[totalRow].NumOfBedrooms</td>
                                    <td>@Model.Properties[totalRow].CreationTime</td>
                                    <td>@Model.Properties[totalRow].Rent</td>
                                    <td>@Model.Properties[totalRow].Description</td>
                                    @if (Model.Properties[totalRow].UserWhoRented != null)
                                    {
                                        <td>
                                            <p class="not-available"> Not available </p></td>
                                    }
                                    else
                                    {
                                        <td>
                                            <p class="available"> Available </p></td>
                                    }
                                    <td>
                                        @using (Html.BeginForm("ViewLandlord", "Admin", new { landlordId = Model.Properties[totalRow].LandlordId }, FormMethod.Post))
                                        {
                                            <button type="submit" class="btn btn-outline-success">View Landlord</button>
                                        }
                                    </td>
                                </tr>
                                totalRow++;
                                if (totalRow >= Model.Properties.Count) break;
                            }
                            </tbody>
                        </table>
                        <p>Tab @(tab + 1): Showing entries @(tab*propPerTab + 1) - @(Math.Min((tab + 1) * propPerTab,Model.Properties.Count)) of @Model.Properties.Count</p>
                    </div>
                }
            
            
            
            <div style="overflow:auto;">
                <div style="float:right;">
                    <button type="button" id="prevBtn" onclick="nextPrev(-1, 'AllProperties')">Previous</button>
                    <button type="button" id="nextBtn" onclick="nextPrev(1, 'AllProperties')">Next</button>
                </div>
            </div>
            
            @*-- Circles which indicates the steps of the form: --*@
            <div style="text-align:center;margin-top:40px;">
                @for (int iter = 0; iter <= Model.Properties.Count / propPerTab; iter++) {
                    <span class="step hidden"></span>
                }
            </div>
    </div>
</div>





