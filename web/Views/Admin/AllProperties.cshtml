@model PropertiesDashboardViewModel

@{
    ViewData["Title"] = "All Properties";
}

<h2>All properties</h2>

<table class="table">
    <thead>
    <tr>
        <th scope="col">
            @using (Html.BeginForm("SortProperties", "Admin", new { by = "Availability" }, FormMethod.Post))
                {
                    <button type="submit" class="btn btn-outline-primary">Sort by Availability</button>
                }
        </th>
        <th scope="col">Address</th>
        <th scope="col">Type</th>
        <th scope="col"># of Bedrooms</th>
        <th scope="col">Created</th>
        <th scope="col">Rent (pcm)
            <a href=@Url.Action("SortProperties", "Admin", new { by = "Rent" })>
                <i class="bi bi-chevron-down"></i>
            </a>
            <a href=@Url.Action("SortProperties", "Admin", new { by = "Rent", descending = true })>
                <i class="bi bi-chevron-up"></i>
            </a>
        </th>
        <th scope="col">Description</th>
        <th scope="col">Availability</th>
    </tr>
    </thead>
    <tbody>
    @{
        var i = 1;
    }
    @foreach (var prop in Model.Properties)
    {
        <tr>
            <th scope="row">@i</th>
            <td>@prop.Address!.AddressLine1, @prop.Address.AddressLine2, @prop.Address.AddressLine3, @prop.Address.TownOrCity</td>
            <td>@prop.PropertyType</td>
            <td>@prop.NumOfBedrooms</td>
            <td>@prop.CreationTime</td>
            <td>@prop.Rent</td>
            <td>@prop.Description</td>
            @if (prop.UserWhoRented != null)
            {
                <td><p class="not-available"> Not available </p></td>
            }
            else
            {
                <td><p class="available"> Available </p></td>
            }
            <td>
                @using (Html.BeginForm("ViewLandlord", "Admin", new { landlordId = prop.LandlordId }, FormMethod.Post))
                {
                    <button type="submit" class="btn btn-outline-success">View Landlord</button>
                }
            </td>
        </tr>
        i++;
    }
    </tbody>
</table>

<script>
$('#sortTable').DataTable();
</script>

<div class="pagination-buttons">
    <button type="button" class="page-btn start-page">start</button>
    <button type="button" class="page-btn prev-page">prev</button>
    <button type="button" class="page-btn active">1</button>
    <button type="button" class="page-btn" onclick="PaginationButtons(100)">2</button>
    <button type="button" class="page-btn">3</button>
    <button type="button" class="page-btn">4</button>
    <button type="button" class="page-btn">5</button>
    <button type="button" class="page-btn">6</button>
    <button type="button" class="page-btn">7</button>
    <button type="button" class="page-btn">8</button>
    <button type="button" class="page-btn">9</button>
    <button type="button" class="page-btn">10</button>
    <button type="button" class="page-btn next-page">next</button>
    <button type="button" class="page-btn end-page">end</button>
</div>

<script>
PaginationButtons(100)
const paginationButtons = new PaginationButtons(100); 
</script>



