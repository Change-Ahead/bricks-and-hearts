@model TenantListModel

@{
    ViewData["Title"] = "Tenant List";
}

<h2>Tenant List</h2>

@using (Html.BeginForm("TenantList", "Admin", FormMethod.Get))
{
    <div class="row mb-4">
        <input class="form-control" id="targetPostcode" name="targetPostcode" required placeholder="Enter postcode to sort by location" pattern="([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\s?[0-9][A-Za-z]{2})"/>
        <div class="col-auto" style="align-self: center">
            <button type="submit" class="btn btn-primary">Sort</button>
        </div>
    </div>    
}

<div class="dropdown-button">
    <a class="btn btn-primary mb-3" data-bs-toggle="collapse" href="#dropdown-contents" role="button" aria-expanded="false" aria-controls="dropdown-contents">
        <i class="bi bi-arrow-90deg-down"></i> Filter
    </a>
</div>

<div class="collapse @(Model.Filter.GetList().SequenceEqual(new HousingRequirementModel().GetList()) ? "":"show")" id="dropdown-contents">
    <form method="get" asp-controller="Admin" asp-action="TenantList">

        <div class="row mb-3">
            <div class="col-auto d-grid">
                @Html.CheckBox("Filter.AcceptsSingleTenant", Model.Filter.AcceptsSingleTenant ?? false, new { @class = "btn-check" })
                <label asp-for="Filter.AcceptsSingleTenant" class="btn btn-outline-blue shadow-none pill-check">Single tenant</label>
            </div>
            <div class="col-auto d-grid">
                @Html.CheckBox("Filter.AcceptsCouple", Model.Filter.AcceptsCouple ?? false, new { @class = "btn-check" })
                <label asp-for="Filter.AcceptsCouple" class="btn btn-outline-blue shadow-none pill-check">Couple</label>
            </div>
            <div class="col-auto d-grid">
                @Html.CheckBox("Filter.AcceptsFamily", Model.Filter.AcceptsFamily ?? false, new { @class = "btn-check" })
                <label asp-for="Filter.AcceptsFamily" class="btn btn-outline-blue shadow-none pill-check">Family (3+)</label>
            </div>
        </div>

        <div class="row g-3">
            <div class="col-auto d-grid">
                @Html.DropDownListFor(
                    model => model.Filter.AcceptsPets,
                    new List<SelectListItem>
                    {
                        new("Has pet", "true"),
                        new("Does not have pet", "false")
                    }, 
                    "Filter by Pets",
                    new { @class="form-select" }
                    )
            </div>
            <div class="col-auto d-grid">
                @Html.DropDownListFor(
                    model => model.Filter.AcceptsNotEET,
                    new List<SelectListItem>
                    {
                        new("In ETT", "true"),
                        new("Not in ETT", "false")
                    }, 
                    "Filter by ETT",
                    new { @class="form-select" }
                    )
            </div>
            <div class="col-auto d-grid">
                @Html.DropDownListFor(
                    model => model.Filter.AcceptsCredit,
                    new List<SelectListItem>
                    {
                        new("On Universal Credit", "true"),
                        new("Not on Universal Credit", "false")
                    }, 
                    "Filter by Universal Credit",
                    new { @class="form-select" }
                    )
            </div>
            <div class="col-auto d-grid">
                @Html.DropDownListFor(
                    model => model.Filter.AcceptsBenefits,
                    new List<SelectListItem>
                    {
                        new("On Housing Benefits", "true"),
                        new("Not on Housing Benefits", "false")
                    }, 
                    "Filter by Housing Benefits",
                    new { @class="form-select" }
                    )
            </div>
            <div class="col-auto d-grid">
                @Html.DropDownListFor(
                    model => model.Filter.AcceptsOver35,
                    new List<SelectListItem>
                    {
                        new("Over 35", "true"),
                        new("35 or under", "false")
                    }, 
                    "Filter by Over 35",
                    new { @class="form-select" }
                    )
            </div>
        </div>
        <input type="submit" value="Apply filters" class="btn btn-large btn-primary my-3"/>
    </form>
</div>

<table class="table">
    <thead>
        @if (Model.TenantList!.Count > 0)
        {
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Email</th>
                <th scope="col">Phone</th>
                <th scope="col">Postcode</th>
                <th scope="col">Type</th>
                <th scope="col">Has Pet?</th>
                <th scope="col">In ETT?</th>
                <th scope="col">On Universal Credit?</th>
                <th scope="col">On Housing Benefits?</th>
                <th scope="col">Over 35?</th>
            </tr>
        }
        else
        {
            <div>There are no tenants which match this search.</div>
        }
    </thead>
    <tbody>
    @foreach (var tenant in Model.TenantList!)
    {
        <tr>
            <td>@tenant!.Name</td>
            <td>@tenant.Email</td>
            <td>@tenant.Phone</td>
            <td>@tenant.Postcode</td>
            <td>@tenant.Type</td>
            <td>@tenant.HasPet</td>
            <td>@tenant.ETT</td>
            <td>@tenant.UniversalCredit</td>
            <td>@tenant.HousingBenefits</td>
            <td>@tenant.Over35</td>
        </tr>
    }
    </tbody>
</table>

@{ await Html.RenderPartialAsync("_PaginationPartial", new PaginationModel
   {
       Page = Model.Page,
       Total = Model.Total,
       ItemsPerPage = Model.TenantsPerPage,
       ItemsOnPage = Model.TenantList.Count,
       HrefPrevious = Url.Action("TenantList", "Admin", new { targetPostcode = Model.TargetPostcode, page = Model.Page - 1, propPerPage = Model.TenantsPerPage }),
       HrefNext = Url.Action("TenantList", "Admin", new { targetPostcode = Model.TargetPostcode, page = Model.Page + 1, propPerPage = Model.TenantsPerPage })
   }); }

<div>
    <h2>Importing tenant information</h2>

    @using (Html.BeginForm("ImportTenants", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div>Please upload a CSV file containing tenant information. This information will replace all existing tenant records.</div>
        <input name="csvFile" type="file" accept="file">
        <input type="submit" value="Import Tenants" />
    }

    <p></p>
    <p>Below is a CSV file which you may use as a template for the tenant data you wish to import. The first row is filled in as an example.</p>
    <p>Please do not change the column headings, or your data will not be recognised as aligning with the fields stored in the database.</p>
    <p>Data imported is case sensitive and registers white space. Certain fields require a Boolean input (TRUE or FALSE). Any field except for the tenant's name may be left blank.</p>

    @using (Html.BeginForm("GetSampleTenantCSV", "Admin", FormMethod.Post))
    {
        <button type="submit" class="btn btn-primary">Download sample Tenant Data CSV</button>
    }  
</div>