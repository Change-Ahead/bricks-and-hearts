@model PropertiesDashboardViewModel

@{
    ViewData["Title"] = "Properties";
}

<div class="mx-md-5">
    <h1 class="font-h1 mt-5">Properties</h1>

    <div class="row mt-4">
        <div class="col-auto me-auto mb-2">
            <form asp-action="SortProperties" asp-controller="Property" method="get" class="row mx-0">
                @Html.DropDownListFor(
                    model => model.SortBy,
                    new List<SelectListItem>
                    {
                        new("Sort by availability", "Availability"),
                        new("Sort by rent", "Rent")
                    },
                    new { @class = "form-select col h-auto me-3" })
                <button type="submit" class="btn btn-outline-primary col">Sort</button>
            </form>
        </div>
        <div class="col-auto me-auto mb-2">
            <form asp-action="SortPropertiesByLocation" asp-controller="Property" method="get" class="row mx-0">
                <input class="form-control col h-auto me-3" id="postcode" name="postcode" required placeholder="Enter postcode to sort by location" pattern="([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\s?[0-9][A-Za-z]{2})"/>
                <button type="submit" class="btn btn-outline-primary col">Sort</button>
            </form>
        </div>

        <div class="col-auto ms-sm-auto">
            <a asp-controller="Property" asp-action="AddNewProperty_Begin" asp-route-landlordId="@Model.Owner?.LandlordId" class="btn btn-primary">Add new property</a>
        </div>
    </div>

    <partial name="../Property/_PropertyTable"/>

    @{
        var from = (Model.Page - 1) * Model.PropPerPage + 1;
        var to = Math.Min((Model.Page - 1) * Model.PropPerPage + Model.PropPerPage, Model.Total);
    }

    <p>Displaying properties @from to @to of @Model.Total</p>

    @if (Model.Page > 1)
    {
        <a type="button" class="btn btn-outline-primary" href="@Url.Action("SortProperties", "Property", new { sortBy = Model.SortBy, page = Model.Page - 1, propPerPage = Model.PropPerPage })">
            <i class="previous"> Previous </i>
        </a>
    }

    @if (Model.Page <= Model.Total / Model.PropPerPage)
    {
        <a type="button" class="btn btn-outline-primary" href="@Url.Action("SortProperties", "Property", new { sortBy = Model.SortBy, page = Model.Page + 1, propPerPage = Model.PropPerPage })">
            <i class="bi"> Next </i>
        </a>
    }

</div>

